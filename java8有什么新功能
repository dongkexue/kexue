/**
	 * java8有什么新功能
	 * 
	 * 1.java编程语言
	 *    1.1、Lambda表达式：一个新的语言特性，他们使您能够将函数视为方法参数，或将代码视为数据
	 *    1.2、方法引用：方法引用为已经有名称的方法提供易于阅读的Lambda表达式
	 *    1.3、默认方法：使用default关键字为借口定义默认方法（有实现的方法）
	 *    1.4、重复注解：提供了将同一注解多次应用同一声明或类型使用的能力
	 *    1.5、类型注解：提供了在使用类型的任何地方应用注解的能力，而不仅仅是在声明上
	 *    1.6、java8增强了类型推断
	 *    1.7、方法参数反射
	 *    1.8、java.util.function:一个新的包，它包含为lambda表达式和方法引用提供目标类型的通用功能接口
	 * 2.集合(Collections)
	 *    2.1、java.util.stream包中新增了Stream API,用来支持对元素流的函数式操作
	 *    2.2、改进了有键冲突问题的HashMap
	 * 3.精简运行时(Compact Profiles)   
	 * 4.安全性(Security)
	 * 5.JavaFX
	 * 6.Tools(包含一些调用Nashorn引擎、启动JavaFX应用程序等等)
	 * 7.国际化(Internationalization)
	 * 		7.1、Unicode增强，包括对Unicode6.2.0的支持
	 * 		7.2、提供了新的Calendar和Locale API
	 * 8.部署(Deployment)
	 * 9.日期-时间 包(Date-Time Package)：提供了更全面的时间和日期操作
	 * 10.脚本(Scripting)：Java 8提供了一个新的 Nashorn javascript 引擎(取代了Nashorn javascript引擎)，它允许我们在JVM上运行特定的 javascript 应用
	 * 11.改进IO和NIO
	 * 12.改进java.lang 和 java.util
	 * 		12.1、支持数组并行排序
	 * 		12.2、支持Base64 的编码和解码
	 * 		12.3、支持无符号运算
	 * 		12.4、Optional类：最大化减少空指针异常
	 * 13.JDBC
	 * 		13.1、JDBC-ODBC桥已被移除
	 * 		13.2、JDBC 4.2引入了新的特性
	 * 14.Java DB(一个Java数据库)
	 * 15.网络(Networking)：新增了java.net.URLPermission
	 * 16.并发(Concurrency)：
	 * 		16.1、CompletableFuture增强了之前的Future
	 * 		16.2、java.util.concurrent.ConcurrentHashMap支持基于新添加的stream功能和lambda表达式的聚合操作
	 * 		16.3、java.util.concurrent.atomic提供了一组变量类，对于单个变量支持无锁、线程安全操作的工具类
	 * 		16.4、java.util.concurrent.ForkJoinPool用于补充ExecutorService
	 * 		16.5、java.util.concurrent.locks.StampedLock提供了基于功能的锁，有三种模式用于控制读/写访问
	 * 17.JVM：移除了PermGen，取而代之的是Metaspace
	 * 
	 * 
	 * Java8特别强大的是Lambda表达式和Stream，通过这两点新增和增强了很多包
	 * 新增包：java.lang.invoke、java.util.function、java.util.stream
	 * 
	 * */
